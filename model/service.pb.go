// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package model

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// HeartbeatRequest
type HeartbeatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(m, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

// HeartbeatResponse
type HeartbeatResponse struct {
	// message
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// cpuUsage
	CpuUsage uint32 `protobuf:"varint,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	// ramUsage
	RamUsage uint32 `protobuf:"varint,3,opt,name=ram_usage,json=ramUsage,proto3" json:"ram_usage,omitempty"`
	// diskUsage
	DiskUsage uint32 `protobuf:"varint,4,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	// connections
	Connections uint32 `protobuf:"varint,5,opt,name=connections,proto3" json:"connections,omitempty"`
	// isServing
	IsServing            bool     `protobuf:"varint,6,opt,name=is_serving,json=isServing,proto3" json:"is_serving,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (m *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(m, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

func (m *HeartbeatResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HeartbeatResponse) GetCpuUsage() uint32 {
	if m != nil {
		return m.CpuUsage
	}
	return 0
}

func (m *HeartbeatResponse) GetRamUsage() uint32 {
	if m != nil {
		return m.RamUsage
	}
	return 0
}

func (m *HeartbeatResponse) GetDiskUsage() uint32 {
	if m != nil {
		return m.DiskUsage
	}
	return 0
}

func (m *HeartbeatResponse) GetConnections() uint32 {
	if m != nil {
		return m.Connections
	}
	return 0
}

func (m *HeartbeatResponse) GetIsServing() bool {
	if m != nil {
		return m.IsServing
	}
	return false
}

func init() {
	proto.RegisterType((*HeartbeatRequest)(nil), "model.HeartbeatRequest")
	proto.RegisterType((*HeartbeatResponse)(nil), "model.HeartbeatResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0xd0, 0xcb, 0x4a, 0x03, 0x31,
	0x14, 0xc6, 0x71, 0xa3, 0xf6, 0x92, 0x23, 0x05, 0xcd, 0xc6, 0xa0, 0x08, 0xc3, 0xac, 0x66, 0x35,
	0x0b, 0x7d, 0x01, 0x97, 0x82, 0xbb, 0x14, 0xd7, 0x25, 0x4d, 0x0f, 0x25, 0x68, 0x2e, 0xe6, 0x24,
	0xbe, 0xa2, 0xaf, 0x25, 0x4d, 0x5a, 0x19, 0x74, 0x99, 0xef, 0x07, 0x81, 0xff, 0x81, 0x15, 0x61,
	0xfa, 0xb2, 0x06, 0xc7, 0x98, 0x42, 0x0e, 0x62, 0xe6, 0xc2, 0x0e, 0x3f, 0x7a, 0x01, 0xd7, 0x2f,
	0xa8, 0x53, 0xde, 0xa2, 0xce, 0x0a, 0x3f, 0x0b, 0x52, 0xee, 0xbf, 0x19, 0xdc, 0x4c, 0x46, 0x8a,
	0xc1, 0x13, 0x0a, 0x09, 0x0b, 0x87, 0x44, 0x7a, 0x8f, 0x92, 0x75, 0x6c, 0xe0, 0xea, 0xf4, 0x14,
	0xf7, 0xc0, 0x4d, 0x2c, 0x9b, 0x52, 0xed, 0xbc, 0x63, 0xc3, 0x4a, 0x2d, 0x4d, 0x2c, 0x6f, 0x27,
	0x4c, 0xda, 0x1d, 0xf1, 0xa2, 0x61, 0xd2, 0xae, 0xe1, 0x03, 0xc0, 0xce, 0xd2, 0xfb, 0x51, 0x2f,
	0xab, 0xf2, 0xc3, 0xd2, 0xb8, 0x83, 0x2b, 0x13, 0xbc, 0x47, 0x93, 0x6d, 0xf0, 0x24, 0x67, 0xd5,
	0xa7, 0xd3, 0xe1, 0x03, 0x4b, 0x9b, 0x5a, 0xe6, 0xf7, 0x72, 0xde, 0xb1, 0x61, 0xa9, 0xb8, 0xa5,
	0x75, 0x1b, 0x1e, 0x5f, 0x61, 0xb1, 0x6e, 0xd5, 0xe2, 0x19, 0xf8, 0x6f, 0x93, 0xb8, 0x1d, 0x6b,
	0xfd, 0xf8, 0x37, 0xfd, 0x4e, 0xfe, 0x87, 0x96, 0xdf, 0x9f, 0x6d, 0xe7, 0xf5, 0x70, 0x4f, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x25, 0x55, 0x12, 0x9f, 0x49, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	// Heartbeat
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/model.Service/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	// Heartbeat
	Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/model.Service/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Heartbeat",
			Handler:    _Service_Heartbeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
